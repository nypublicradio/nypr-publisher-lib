{{md-text text="
#### `story-tease`
Renders the given `item` in a compact UI that is suitable for a listing context. Expects a `story` model as its `item` parameter.

##### Layouts
There are several variations on the story tease layout. They are controlled via a combination of passed-in parameters and computed properties derived from the `item` attributes. The examples below will use the following dummy object:
"}}
{{code-snippet name="story-tease-object.js"}}

<ol>
  <li>
    <p>
      Nothing special. Pass in the `item`.
    </p>
    {{code-snippet name="story-tease-normal.hbs"}}
    {{!-- BEGIN-SNIPPET story-tease-normal --}}
    {{story-tease item=model.item}}
    {{!-- END-SNIPPET --}}
  </li>

  <li>
    <p>
      The "flipped" layout is controlled with the <code>flipped</code> parameter.
    </p>
    {{code-snippet name="story-tease-flipped.hbs"}}
    {{!-- BEGIN-SNIPPET story-tease-flipped --}}
    {{story-tease item=model.item flipped=true}}
    {{!-- END-SNIPPET --}}
  </li>

  <li>
    {{md-text text="
The \"featured\" layout: some extra padding and and a gray background.

Set the `isFeatured` parameter to be true. If the passed in `item` must has its `isLatest` attribute set to `true`, the component will use the `whats-on` service and render a UI label to show if the given story is currently airing or not. The following example uses this dummy object:
    "}}
    {{code-snippet name="latest-story.js"}}
    {{code-snippet name="story-tease-featured.hbs"}}
    {{!-- BEGIN-SNIPPET story-tease-featured --}}
    {{story-tease item=model.latestItem isFeatured=true}}
    {{!-- END-SNIPPET --}}
  </li>

  <li>
    {{md-text text="
The \"fancy featured image\" layout: use the main image as a background and add a gradient.

Set `isFancyFeatured` to `true`, or else let the component derive it using the `isFancyFeatured` computed property.
    "}}
    {{code-snippet name="is-fancy-featured-cp.js"}}
    {{code-snippet name="story-tease-fancy.hbs"}}
    {{!-- BEGIN-SNIPPET story-tease-fancy --}}
    {{story-tease item=model.latestItem isFeatured=true isFancyFeatured=true}}
    {{!-- END-SNIPPET --}}
  </li>

  <li>
    {{md-text text="
The full screen layout: set `isFeatured` and `fullScreen` to `true`.

Accepts a block which is positioned above the main tease content inside a `.story-tease__floating-header` node.
    "}}
    {{code-snippet name="story-tease-full-screen.hbs"}}
    {{!-- BEGIN-SNIPPET story-tease-full-screen --}}
    {{#story-tease item=model.latestItem isFeatured=true fullScreen=true}}
      <p style="max-width: 800px; padding: 0 25px; margin: 0 auto;">
        Floating Story Tease Header
      </p>
    {{/story-tease}}
    {{!-- END-SNIPPET --}}
  </li>
</ol>

{{md-text text="##### Other Parameters"}}
<ol>
  <li>
    {{md-text text="`parentTitle`:  used to control if the the story's \"parent\" is rendered as a link above the story title. If the `parentTitle` matches the value of `item.headers.brand.title`, the links will **not** be rendered."}}
    {{code-snippet name="parent-title.hbs"}}
    {{!-- BEGIN-SNIPPET parent-title --}}
    {{story-tease item=model.item parentTitle="The Brian Lehrer Show"}}
    {{!-- END-SNIPPET --}}
  </li>

  <li>
    {{md-text text="
`adminURL`: the **host and path prefix** of the admin site used in editorial controls.

`isStaff`: a boolean to determine whether or not to render staff-level editorial controls.
    "}}
    {{code-snippet name="admin-url.hbs"}}
    {{!-- BEGIN-SNIPPET admin-url --}}
    {{story-tease item=model.item isStaff=true adminURL=(concat config.adminRoot '/admin')}}
    {{!-- END-SNIPPET --}}
  </li>

  <li>
    {{md-text text="`playContext`: a string passed to Google Analytics event tracking"}}
  </li>

  <li>
    {{md-text text="
    `allowQueueing`: show queue button on story for nypr sites that allow queueing
    "}}
    {{code-snippet name="allow-queueing.hbs"}}
    {{!-- BEGIN-SNIPPET allow-queueing --}}
    {{story-tease item=model.item allowQueueing=true}}
    {{!-- END-SNIPPET --}}
  </li>

</ol>
